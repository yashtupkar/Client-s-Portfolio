{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";// import './home.css'\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Counter=_ref=>{let{end,label}=_ref;const[count,setCount]=useState(0);const counterRef=useRef(null);useEffect(()=>{const observer=new IntersectionObserver(entries=>{if(entries[0].isIntersecting){let start=0;const duration=2000;const increment=end/(duration/10);const counter=setInterval(()=>{start+=increment;if(start>=end){setCount(end);clearInterval(counter);}else{setCount(Math.ceil(start));}},10);observer.unobserve(counterRef.current);}},{threshold:0.5});observer.observe(counterRef.current);return()=>observer.disconnect();},[end]);return/*#__PURE__*/_jsxs(\"div\",{className:\"counter\",ref:counterRef,children:[/*#__PURE__*/_jsx(\"span\",{className:\"count\",children:count}),/*#__PURE__*/_jsx(\"i\",{class:\"ri-add-line\"}),/*#__PURE__*/_jsx(\"h2\",{children:label})]});};export default Counter;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","Counter","_ref","end","label","count","setCount","counterRef","observer","IntersectionObserver","entries","isIntersecting","start","duration","increment","counter","setInterval","clearInterval","Math","ceil","unobserve","current","threshold","observe","disconnect","className","ref","children","class"],"sources":["C:/Users/yasht/OneDrive/Desktop/Rushab_Portfolio/my-portfolio/src/components/counter.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n// import './home.css'\r\n\r\nconst Counter = ({ end, label }) => {\r\n  const [count, setCount] = useState(0);\r\n  const counterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          let start = 0;\r\n          const duration = 2000;\r\n          const increment = end / (duration / 10);\r\n\r\n          const counter = setInterval(() => {\r\n            start += increment;\r\n            if (start >= end) {\r\n              setCount(end);\r\n              clearInterval(counter);\r\n            } else {\r\n              setCount(Math.ceil(start));\r\n            }\r\n          }, 10);\r\n\r\n          observer.unobserve(counterRef.current);\r\n        }\r\n      },\r\n      { threshold: 0.5 }\r\n    );\r\n\r\n    observer.observe(counterRef.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [end]);\r\n\r\n  return (\r\n    <div className=\"counter\" ref={counterRef}>\r\n      <span className=\"count\">{count}</span>\r\n      <i class=\"ri-add-line\"></i>\r\n      <h2>{label}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,GAAG,CAAEC,KAAM,CAAC,CAAAF,IAAA,CAC7B,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAW,UAAU,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAE/BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACtCC,OAAO,EAAK,CACX,GAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,CAAE,CAC7B,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,KAAM,CAAAC,QAAQ,CAAG,IAAI,CACrB,KAAM,CAAAC,SAAS,CAAGX,GAAG,EAAIU,QAAQ,CAAG,EAAE,CAAC,CAEvC,KAAM,CAAAE,OAAO,CAAGC,WAAW,CAAC,IAAM,CAChCJ,KAAK,EAAIE,SAAS,CAClB,GAAIF,KAAK,EAAIT,GAAG,CAAE,CAChBG,QAAQ,CAACH,GAAG,CAAC,CACbc,aAAa,CAACF,OAAO,CAAC,CACxB,CAAC,IAAM,CACLT,QAAQ,CAACY,IAAI,CAACC,IAAI,CAACP,KAAK,CAAC,CAAC,CAC5B,CACF,CAAC,CAAE,EAAE,CAAC,CAENJ,QAAQ,CAACY,SAAS,CAACb,UAAU,CAACc,OAAO,CAAC,CACxC,CACF,CAAC,CACD,CAAEC,SAAS,CAAE,GAAI,CACnB,CAAC,CAEDd,QAAQ,CAACe,OAAO,CAAChB,UAAU,CAACc,OAAO,CAAC,CAEpC,MAAO,IAAMb,QAAQ,CAACgB,UAAU,CAAC,CAAC,CACpC,CAAC,CAAE,CAACrB,GAAG,CAAC,CAAC,CAET,mBACEH,KAAA,QAAKyB,SAAS,CAAC,SAAS,CAACC,GAAG,CAAEnB,UAAW,CAAAoB,QAAA,eACvC7B,IAAA,SAAM2B,SAAS,CAAC,OAAO,CAAAE,QAAA,CAAEtB,KAAK,CAAO,CAAC,cACtCP,IAAA,MAAG8B,KAAK,CAAC,aAAa,CAAI,CAAC,cAC3B9B,IAAA,OAAA6B,QAAA,CAAKvB,KAAK,CAAK,CAAC,EACb,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}